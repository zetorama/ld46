go.property("speed", 200)

local debugdraw = require "debug-draw.debug-draw"

function init(self)
	self.input = {}
	self.correction = vmath.vector3()
	msg.post(".", "acquire_input_focus")
end

function update(self, dt)
	local pos = go.get_position()
	debugdraw.text('x:' .. math.floor(pos.x) .. '; y:' .. math.floor(pos.y), 0, 20)

	-- update player position
	local moveTo = vmath.vector3()
	-- build directional vector
	if self.input[hash("move_up")] then
		moveTo.y = 1
	elseif self.input[hash("move_down")] then
		moveTo.y = -1
	end
	if self.input[hash("move_left")] then
		moveTo.x = -1
	elseif self.input[hash("move_right")] then
		moveTo.x = 1
	end
	-- normalize in case if we're moving diagonal
	if vmath.length_sqr(moveTo) > 1 then
		moveTo = vmath.normalize(moveTo)
	end

	local newPos = pos + moveTo * self.speed * dt
	go.set_position(newPos)

	-- reset things
	self.correction = vmath.vector3()
end

function on_message(self, message_id, message, sender)
	if message_id == hash("contact_point_response") then
		-- simple collision solver
		local proj = vmath.dot(self.correction, message.normal)
		local comp = (message.distance - proj) * message.normal
		self.correction = self.correction + comp
		go.set_position(go.get_position() + comp)
	end
end

function on_input(self, action_id, action)
	if action_id then
		if action.pressed then
			self.input[action_id] = true
		elseif action.released then
			self.input[action_id] = false
		end
	end
end
